###############################################################################

MESSAGE("####################################")
MESSAGE("##### Preparing POL specific configuration")
MESSAGE("####################################")
MESSAGE("##### Build type is: " ${BUILD})

##############################################################

# versioning
set(BINARY_WITH_VERSIONING		OFF)

# activate static builds
set(BUILD_STATIC                OFF)

# create global pol_config.h
INCLUDE (CheckIncludeFiles)
IF(WINDOWS)
    SET(HAVE_OPENSSL true)
    SET(HAVE_MYSQL true)
ELSE()
    CHECK_INCLUDE_FILES (openssl/md5.h HAVE_OPENSSL)
    CHECK_INCLUDE_FILES (mysql/mysql.h HAVE_MYSQL)
ENDIF() 
CONFIGURE_FILE(
    ${CMAKE_CURRENT_LIST_DIR}/env/pol_global_config.h.in 
    ${CMAKE_CURRENT_BINARY_DIR}/pol_global_config.h
)

##############################################################
# compile FLAGS and INCLUDE dirs
IF(LINUX)
    SET (FLAGS
        ${FLAGS}
        -D_GNU_SOURCE
        -std=c++11
        -DINC_PASSERT=1 
        -DTIXML_USE_STL 
        -W
        -Wall
      #  -Wno-overloaded-virtual
      #  -Wno-switch
        -Wno-unused
        -Wno-long-long
        -Wno-deprecated-declarations
        -Wno-format
        -Wno-unused-parameter
        -Wno-unknown-pragmas
        -fno-strict-aliasing  
        -Wno-unused-result 
    )
	IF(GCC)
		SET (FLAGS
			${FLAGS}
			-fopenmp
			-Wno-unused-but-set-parameter
		)
	ENDIF()

    SET(BOOST_ROOT "${CMAKE_CURRENT_LIST_DIR}/../lib/boost_1_55_0")
    MESSAGE("##### Searching BOOST also in: ${BOOST_ROOT}")
    FIND_PACKAGE(Boost 1.55)
    IF(NOT Boost_FOUND)
        IF(EXISTS "${CMAKE_CURRENT_LIST_DIR}/../lib/boost_1_55_0.tar.bz2")
            MESSAGE(STATUS "Found boost tarball, trying to unpack it...")
            execute_process(
                COMMAND tar xjf boost_1_55_0.tar.bz2
                WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/../lib
            )
        ENDIF()
    ENDIF()
    FIND_PACKAGE(Boost 1.55)
    IF(NOT Boost_FOUND)
        MESSAGE(FATAL_ERROR ">>>>> You need the BOOST dev package to compile POL <<<<<")
    ENDIF()
    MESSAGE("##### BOOST include directory: ${Boost_INCLUDE_DIR}")
    INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
    LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})
ENDIF()
IF(WINDOWS)
	SET (FLAGS
    	    ${FLAGS}
    	    /D"INC_PASSERT" 
    	    /D"TIXML_USE_STL" 
	    /D"_WIN32"
	    /D"WIN32"
	    /D"NOMINMAX"
	)
	SET (INCLUDE_DIRS
    	    ${INCLUDE_DIRS}
	        ../../lib/mysql-connector-c-6.0.2-win32
	)

    SET(BOOST_ROOT "${CMAKE_CURRENT_LIST_DIR}/../lib/boost_1_55_0")
    MESSAGE(STATUS "** Search Boost root: ${BOOST_ROOT}")
    FIND_PACKAGE(Boost 1.55)
    MESSAGE(STATUS "** Boost Include: ${Boost_INCLUDE_DIR}")
    INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
    LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})
ENDIF()
